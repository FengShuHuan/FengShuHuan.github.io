<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://FengShuHuan.github.io</id>
    <title>一千万年银河の笔记</title>
    <updated>2022-01-11T03:26:16.937Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://FengShuHuan.github.io"/>
    <link rel="self" href="https://FengShuHuan.github.io/atom.xml"/>
    <subtitle>现在的你每一次想要学习都是未来的你给你发的求救信号</subtitle>
    <logo>https://FengShuHuan.github.io/images/avatar.png</logo>
    <icon>https://FengShuHuan.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, 一千万年银河の笔记</rights>
    <entry>
        <title type="html"><![CDATA[Java（六） i++与++i]]></title>
        <id>https://FengShuHuan.github.io/post/javaliu/</id>
        <link href="https://FengShuHuan.github.io/post/javaliu/">
        </link>
        <updated>2022-01-07T04:19:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="什么是"><strong>什么是“++”？</strong></h3>
<p>   ++就是自加1</p>
<h3 id="对于运算符来说"><strong>对于++运算符来说：</strong></h3>
<p>   可以出现在变量前，也可以出现在变量后。<br>
   不管出现在变量前还是后，总之++执行结束之后，变量的值一定会自加1。</p>
<h3 id="出现在变量前和变量后有什么区别"><strong>++出现在变量前和变量后有什么区别？</strong></h3>
<p>   当++出现在变量后，会先做赋值运算，再自加1<br>
   当++出现在变量前的时候，会先进行自加1的运算，然后再赋值。</p>
<h3 id="例"><strong>例：</strong></h3>
<pre><code>// 题目
int c = 90;
System.out.println(c++);  // 在这里有一个隐形的赋值运算。这里输出90
// 把上面代码拆解开
//int temp = c++;   这里就是先赋值在+1
//System.out.println(temp); 输出90

System.out.println(c); // 输出91

int d = 80;
System.out.println(++d); //81
// 拆解
//int temp2 = ++d;  先+1在赋值
//System.out.println(temp2);

System.out.println(d); // 81
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Java（五） 变量]]></title>
        <id>https://FengShuHuan.github.io/post/javawu/</id>
        <link href="https://FengShuHuan.github.io/post/javawu/">
        </link>
        <updated>2022-01-04T04:58:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="1什么是变量"><strong>1.什么是变量</strong></h3>
<p>   变量就是内存中  存储数据的最基本的单元（就是存数据的“盒子”）</p>
<h3 id="2变量的数据类型有什么用"><strong>2.变量的数据类型有什么用</strong></h3>
<p>   不同的数据类型在内存中分配的空间大小不同，JVM是根据不同的数据类型分配不同大小的空间<br>
   例：int分配4个字节空间<br>
         1字节=8比特位（bit）<br>
         1比特位=一个1或者0（二进制）</p>
<h3 id="3变量的三要素"><strong>3.变量的三要素</strong></h3>
<p>   数据类型   决定空间大小<br>
   变量名       通过名方便访问<br>
   值             数据</p>
<h3 id="4命名规则var是标识符依照标识符的命名规则和规范"><strong>4.命名规则（var是标识符，依照标识符的命名规则和规范）</strong></h3>
<p>   由数字，字母，下划线，美元符号组成<br>
   不能以数字开头，不能有空格<br>
   关键字不可作变量名<br>
   变量名不可以重复（大小写是不一样的）<br>
   理论上长度无限制</p>
<h3 id="5命名规范"><strong>5.命名规范</strong></h3>
<p>   见名知意<br>
   驼峰命名<br>
   首字母小写，后面单词的首字母大写</p>
<h3 id="6声明与赋值同c语言"><strong>6.声明与赋值（同C语言）</strong></h3>
<p>   声明：   类型       变量名  ；<br>
   <font color=#FF0000>（注意：变量名必须先声明并赋值后才能访问，没有赋值就相当于这个空间没有被开辟）</font><br>
   赋值：  变量名    =     值   ；</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Java（四） 标识符与关键字]]></title>
        <id>https://FengShuHuan.github.io/post/javasi-biao-shi-fu/</id>
        <link href="https://FengShuHuan.github.io/post/javasi-biao-shi-fu/">
        </link>
        <updated>2022-01-04T04:02:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="什么是标识符"><strong>什么是标识符</strong></h3>
<p>   凡是程序员有权利命名的单词，都是标识符，但是“main”不能修改</p>
<h3 id="标识符的命名规则"><strong>标识符的命名规则</strong></h3>
<p>   1.由数字，字母（包括中文），下划线，美元符号（$）组成<br>
   2.不能以数字开头且不能用空格<br>
   3.关键字不能作标识符<br>
   4.严格区分大小写（“A”与“a”是不一样的）<br>
      对于类来说，同时出现A类与a类，谁在前面生成谁<br>
   5.理论上没有长度限制</p>
<h3 id="标识符的命名规范"><strong>标识符的命名规范</strong></h3>
<p>   1.见名知意<br>
   2.驼峰命名（一高一低）<br>
   3.类名，接口名首字母要大写，后面的每个单词首字母要大写<br>
   4.变量名，方法名首字母小写，后面的每个单词首字母要大写<br>
   5.常量名全部大写，单词与单词之间用下划线“_”连接</p>
<h3 id="什么是关键字"><strong>什么是关键字</strong></h3>
<p>   java语言已经规定好的，有特殊含义的，全部为小写的单词<br>
      例：<br>
<img src="https://FengShuHuan.github.io/post-images/1641272648919.jpg" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Java（三） 程序解读--类]]></title>
        <id>https://FengShuHuan.github.io/post/javasan-cheng-xu-jie-du-lei/</id>
        <link href="https://FengShuHuan.github.io/post/javasan-cheng-xu-jie-du-lei/">
        </link>
        <updated>2022-01-03T07:58:46.000Z</updated>
        <content type="html"><![CDATA[<p>1、一个java源文件中可以定义多个class。</p>
<p>2、 public的类不是必须的。可以没有。</p>
<p>3、在源文件中只要有一个class的定义，那么必然会对应生成一个class文件。</p>
<p>4、public的类可以没有，但如果有的话，public修饰的类名必须和源文件名保持一致。</p>
<p>5、public的类有也只能有1个。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Java（二）  编译并运行第一个程序]]></title>
        <id>https://FengShuHuan.github.io/post/javaer-bian-yi-bing-yun-xing-di-yi-ge-cheng-xu/</id>
        <link href="https://FengShuHuan.github.io/post/javaer-bian-yi-bing-yun-xing-di-yi-ge-cheng-xu/">
        </link>
        <updated>2022-01-03T01:30:04.000Z</updated>
        <content type="html"><![CDATA[<p>如何运行？先编译在运行！<br>
1.编译命令：<br>
在dos命令窗口输入<br>
   javac   java源文件路径<br>
或者<br>
   javac  &quot;把java源文件直接拖进到DOS命令窗口&quot;<br>
最便捷<br>
   打开计算机--&gt;打开一些文件夹--&gt;在地址栏上直接输入cmd回车，这样直接就过去了。<br>
2.运行命令：<br>
在dos命令窗口输入<br>
   java 类名  //这里必须是在编译的文件的目录下</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[圆心辐射法]]></title>
        <id>https://FengShuHuan.github.io/post/yuan-xin-fu-she-fa/</id>
        <link href="https://FengShuHuan.github.io/post/yuan-xin-fu-she-fa/">
        </link>
        <updated>2022-01-03T01:22:33.000Z</updated>
        <content type="html"><![CDATA[<p>什么是圆心辐射法：<br>
占位占位占位占位占位占位占位</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Java（一） 我的第一个Java程序]]></title>
        <id>https://FengShuHuan.github.io/post/wo-de-di-yi-ge-java-cheng-xu/</id>
        <link href="https://FengShuHuan.github.io/post/wo-de-di-yi-ge-java-cheng-xu/">
        </link>
        <updated>2022-01-03T01:19:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="1安装jdk"><strong>1.安装JDK</strong></h3>
<p>（JDK就是Java开发工具机箱，它包含了Java运行环境‘JRE’和Java虚拟机‘JVM’）</p>
<h3 id="2java源文件xxxjava"><strong>2.Java源文件：xxx.java</strong></h3>
<pre><code>Java编译后：xxx.class
</code></pre>
<h3 id="3编译后的class文件他们是程序的类文件名就是类名"><strong>3.编译后的.class文件，他们是程序的类，文件名就是类名</strong></h3>
<figure data-type="image" tabindex="1"><img src="https://FengShuHuan.github.io/post-images/1641270866637.jpg" alt="" loading="lazy"></figure>
<h3 id="4javac命令编译"><strong>4.javac命令编译</strong></h3>
<pre><code>java命令运行
</code></pre>
<h3 id="5第一个java程序"><strong>5.第一个Java程序</strong></h3>
<pre><code>public class HelloWorld{
    public static void main(String[] args){
        System.out.println(&quot;Hello World!&quot;);
        System.out.println(&quot;我的第一个Java程序。&quot;);
    }
}</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[和弦编配-三和弦]]></title>
        <id>https://FengShuHuan.github.io/post/he-xian-bian-pei-san-he-xian/</id>
        <link href="https://FengShuHuan.github.io/post/he-xian-bian-pei-san-he-xian/">
        </link>
        <updated>2021-11-11T11:36:37.000Z</updated>
        <content type="html"><![CDATA[<p>1.在一段旋律的重拍上放和弦<br>
2.将重拍上的音当做一个和弦的根/三/五音来匹配和弦<br>
3.常用的和弦连接与走向</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[正则表达式]]></title>
        <id>https://FengShuHuan.github.io/post/zheng-ze-biao-da-shi/</id>
        <link href="https://FengShuHuan.github.io/post/zheng-ze-biao-da-shi/">
        </link>
        <updated>2021-11-11T03:45:29.000Z</updated>
        <content type="html"><![CDATA[<h1 id="用户名要求字母数字_-不可以使用">用户名要求：字母数字_ 不可以使用@#￥%&amp;</h1>
<pre><code>import re
def usename(name,password):
    pattern=re.compile(r'^[a-zA-Z0-9_]{1,}$')
    a=re.match(pattern,name)
    if a:
        print('ok')
    else:
        print('不合法，请重新输入')
def main():
    name=input('输入用户名：')
    password=input('输入密码：')
    usename(name,password)
main() 
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python作业-函数的定义与调用]]></title>
        <id>https://FengShuHuan.github.io/post/python-zuo-ye-er/</id>
        <link href="https://FengShuHuan.github.io/post/python-zuo-ye-er/">
        </link>
        <updated>2021-10-26T13:15:58.000Z</updated>
        <content type="html"><![CDATA[<p>要求：将原程序中的计算部分封装成函数并调用<br>
代码：</p>
<pre><code>f=open('D:\\01 Python作业\\python前五章阶段性作业\\Attendance.txt')#打开txt
next(f)#从第二行开始
def chuqinlv(chuqin,tianshu,a):# 定义出勤率函数
    a = chuqin / tianshu * 100
    return a
def panduan():#判断出勤率优良的函数
    if a&gt;80:#判断出勤率是否大于80，出勤率80%以上为&quot;良好&quot;,包括80%出勤率80%以下为&quot;较差&quot;
        print('良好')#出勤率80%以上为&quot;良好&quot;
    else:
        print('较差')#包括80%出勤率80%以下为&quot;较差&quot;
b=0#总出勤的变量初始
c=0#总天数的变量初始
for l in f:#遍历列表
    #print(l)#打印行
    O=l.count('O')#查O有几个
    X=l.count('X')#X有几个
    n=O+X#总天数
    z=l[:3]#提取列表前3个元素
    print(z)#输出前三个元素
    print('出勤', O)#输出个人出勤天数
    print('缺勤', X)#输出个人缺勤天数
    a=chuqinlv(O,n,0)#调用chuqinlv函数
    print('出勤率为：%.0f%%'% a)
    panduan()#调用pamduan函数
    print('-------------')
    b=O+b#计算总出勤
    c=X+O+c#计算总天数
print('\n总出勤率为：%.0f %%'%chuqinlv(b,c,0))#调用chuqinlvhanshu输出总出勤率```</code></pre>
]]></content>
    </entry>
</feed>